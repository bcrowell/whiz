software
  syll_schedule.rb
    ... library that handles the eruby embedded in syll.tex
  whiz
    ... does all the database manipulations
  howdy
    ... now only used for solutions
hw.yaml
  edited by hand
  see sample_file for format and how it looks after being parsed and made into json
  can have comments, # ...
  quotes are optional, but when in doubt, use them, because things like commas are active syntactically
  to convert old style to this style
    see /home/bcrowell/Documents/teaching/205/38_fall14/old_sw
    at top and bottom of howdy block in syll.tex
      <% book_for_conversion('lm') %>
      <% write_for_conversion_finish %>
      writes the file "converting";  hand-edit this file:
        europaperA -> europaper/A
        o:parachutecalcc -> co:parachutecalc
        o:slide-uphill-with-pulley* -> *o:slide-uphill-with-pulley
        add notes
        streams are initially constucted so that they match up one-to-one with chapters; if there are
               times when there actually should be a gap in assignments from a chapter, split it into
               two streams; this happened in 205 because we go back and do calc
flags
  can be pretty much any character
  some have special handling in code (o, *, c)
  a flag such as "a" or "b" that would look like a problem part needs to have special code
        for displaying it in human-readable lists, e.g., 12 with a "c" flag has to be
        rendered as 12\int, not 12c
hw.json
  a parsed version of hw.yaml
  see sample_file for what it looks like
problems.csv
  book,ch,num,label,soln
due205f14.csv
due210f14.csv
  written by syll_schedule.rb; gets copied into grades/38_fall14/205m.sets/
  1,2014-08-27
  2,2014-09-03
  ...
reading.csv
  written by syll_schedule.rb
  2014-08-25,""
  2014-08-27,"2*"
  ...
hw_table.tex
  created by whiz
points_possible.csv
  created by whiz; copied to grades/38_fall14/205m.sets/
  set,paper_or_online,pts,ec
  1,p,1,0
  1,o,1,0
  ...
sets205m.csv
  created by whiz; copied to grades/38_fall14/205m.sets/
  set,book,ch,num,parts,flags,chunk,student
  1,1,2,1,,o,,alejandrino_nicole
  ...
boilerplate_for_hw.html
boilerplate_instr.html
  are included in self-service hw generator
~/Lightandmatter/hw/205.html
~/Lightandmatter/hw/210.html
  self-service hw generators
  created by whiz
  hash function depends on student ID, semester, course, chapter, and list of problems (does depend
         on order of problems)
  each html file contains semester and course hard-coded; instructions warn students to check that
         these are correct; student ID is checked against a regex, and a warning is given if it doesn't match
  can input 0 for student ID to generate Joe Blow's
roster*.csv
  key,last,first,class
  needed by howdy for producing solutions
  last and first must be surrounded by double quotes
